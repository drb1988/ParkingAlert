include dashboard-layout-map-chart
block content
 #map-content
  button.btn.btn-danger#map-menu.hidden Optiuni Mapa
  #floating-panel(style='display:none')
    button.btn.btn-info(id='reinitMarker' onclick='') Hărți termice / Markere
    button.btn.btn-info(id='changeGradient' onclick='changeGradient()') Schimba gradient
    button.btn.btn-info(onclick='changeRadius()') Schimba radius
    button.btn.btn-info(onclick='changeOpacity()') Schimba opacititatea
  input#pac-input.controls(type='text', placeholder='Search Box')
  button.btn.btn-default#SaveFigure Save figure!
  select#SavedShapes
    option Select Shape
  #map
block scripts
    script(src='/js/map.js')
    //script(async='', defer='', src='https://maps.googleapis.com/maps/api/s?key=AIzaSyBmyGvsxDlsHTSFQ8XbfplRO4z3KuxAOGg&libraries=visualization&callback=initMap')
    script(async='', defer='', src='https://maps.googleapis.com/maps/api/js?key=AIzaSyBmyGvsxDlsHTSFQ8XbfplRO4z3KuxAOGg&libraries=visualization,places,drawing,geometry&callback=initMap')
    script.
      $( "#map-menu" ).click(function() {
        if($("#floating-panel").is(":visible") )
        $( "#floating-panel" ).fadeOut( "slow");
        else
        $( "#floating-panel" ).fadeIn( "slow");
      });
    script.
        $(document).ready(function(){
            $.ajax({
                async: true,
                type: "POST",
                data: [],
                url: "/web-routes/UserShapes",
                success: function (shapesResult) {
                    console.log("UserShapes\n", shapesResult);
                    var select = $("#SavedShapes");
                    var jsonEdited = [];
                    shapesResult.forEach(function(shape){
                        if(shape.type)
                            if(shape.type=="circle")
                                jsonEdited.push({
                                    type: "circle",
                                    radius: shape.center.radius,
                                    center: {
                                        lat: shape.center.lat,
                                        lng: shape.center.lng
                                    }
                                });
                            else
                                jsonEdited.push({
                                    type: "polygon",
                                    polygon: shape.center
                                })
                    });
                    var result = jsonEdited;
                    /*
                    if(result.type=="circle") {
                        var jsonEdited = {
                         type: "circle",
                         radius: 1461.5543966715109,
                         center: {
                         lat: 47.080646,
                         lng: 21.9242443
                         }
                         }
                    }
                    */
                    /*
                    var result = [
                        {
                            type: "circle",
                            radius: 1461.5543966715109,
                            center: {
                                lat: 47.080646,
                                lng: 21.9242443
                            }
                        },
                        {
                            type: "circle",
                            radius: 1421.5543966715109,
                            center: {
                                lat: 47.080646,
                                lng: 21.9242443
                            }
                        },
                        {
                            type: "circle",
                            radius: 1411.5543966715109,
                            center: {
                                lat: 47.080646,
                                lng: 21.9242443
                            }
                        }
                    ];
                    */
                    // console.log("fake result UserShapes");
                    select.empty();
                    select.append('<option value="">Select Shape</option>');
                    for (var i = 0; i < result.length; i++)
                        select.append('<option value="' + i + '">Shape ' + parseInt(i + 1) + '.</option>');
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    console.log("UserShapes\n Status: " + textStatus+", Error: " + errorThrown);
                    /*
                    var select = $("#SavedShapes");
                    var result = [
                        {
                            type: "circle",
                            radius: 1461.5543966715109,
                            center: {
                                lat: 47.080646,
                                lng: 21.9242443
                            }
                        },
                        {
                            type: "circle",
                            radius: 1421.5543966715109,
                            center: {
                                lat: 47.080646,
                                lng: 21.9242443
                            }
                        },
                        {
                            type: "polygon",
                            polygon: [
                                {
                                    lat: 47.0670818420858,
                                    lng: 22.0450973510742
                                },
                                {
                                    lat: 47.0883580733382,
                                    lng: 22.0450973510742
                                },
                                {
                                    lat: 47.0883580733382,
                                    lng: 21.9820976257324
                                },
                                {
                                    lat: 47.0670818420858,
                                    lng: 21.9820976257324
                                }
                            ]
                        }
                    ];
                    console.log("fake result UserShapes");
                    select.empty();
                    select.append('<option value="">Select Shape</option>');
                    for(var i=0; i<=2; i++)
                        select.append('<option value="'+i+'">Shape '+parseInt(i+1)+'</option>');
                        */
                }
            });
        });
        $("#SavedShapes").change(function() {
            console.log("was changed", this.value);
            var json = {
                index_number: this.value
            }
            console.log("json pentru zona aleasa", json);
            $.ajax({
                async: true,
                type: "POST",
                data: [],
                url: "/web-routes/UserShapes",
                success: function (shapesResult) {
                    console.log("UserShapes\n", shapesResult);
                    var select = $("#SavedShapes");
                    var jsonEdited = [];
                    shapesResult.forEach(function (shape) {
                        console.log("shapeee", shape);
                        if (shape.type == "circle")
                            jsonEdited.push({
                                type: "circle",
                                radius: parseFloat(shape.center.radius)*63781,
                                center: {
                                    lat: parseFloat(shape.center.lat),
                                    lng: parseFloat(shape.center.lng)
                                }
                            });
                        else {
                            var polygonPoints = [];
                            shape.center.forEach(function (point) {
                                polygonPoints.push({
                                    lat: parseFloat(point[0]),
                                    lng: parseFloat(point[1])
                                })
                            });

                            jsonEdited.push({
                                type: "polygon",
                                polygon: polygonPoints
                            });
                        }
                    });
                    console.log("jsonEdited",jsonEdited);
                    var index = parseInt($("#SavedShapes").val());
                    var result = jsonEdited[index];
                    console.log("result typeee final", result);
                    console.log("result typeee final index", index);
                    /*
                    var jsonFakeResult = [
                        {
                            type: "circle",
                            radius: 1461.5543966715109,
                            center: {
                                lat: 47.080646,
                                lng: 21.9242443
                            }
                        },
                        {
                            type: "circle",
                            radius: 121.5543966715109,
                            center: {
                                lat: 47.080646,
                                lng: 21.9242443
                            }
                        },
                        {
                            type: "polygon",
                            polygon: [
                                {
                                    lat: 47.0670818420858,
                                    lng: 22.0450973510742
                                },
                                {
                                    lat: 47.0883580733382,
                                    lng: 22.0450973510742
                                },
                                {
                                    lat: 47.0883580733382,
                                    lng: 21.9820976257324
                                },
                                {
                                    lat: 47.0670818420858,
                                    lng: 21.9820976257324
                                }
                            ]
                        }
                    ];
                    var select = $("#SavedShapes");
                    var result = jsonFakeResult[json.index_number];
                    */
                    var setDrowingToolNull = function () {
                        console.log("aici");
                        if (rectangle != null) {
                            rectangle.setMap(null);
                            rectangle = null;
                        }
                        if (circle != null) {
                            circle.setMap(null);
                            circle = null;
                        }
                        if (polygon != null) {
                            polygon.setMap(null);
                            polygon = null;
                        }
                        return null;
                    }
                    if (result.type == "circle") {
                        console.log("type is circle for: " + 1);
                        circle = setDrowingToolNull(circle);
                        console.log("circle pt map", result.circle);
                        circle = new google.maps.Circle({
                            strokeColor: '#FF0000',
                            strokeOpacity: 0.8,
                            strokeWeight: 2,
                            fillColor: '#FF0000',
                            fillOpacity: 0.35,
                            map: map,
                            center: result.center,
                            radius: result.radius// Math.sqrt(citymap[city].population) * 100
                        });
                        makeAjaxCall();
                    }
                    if (result.type == "polygon") {
                        console.log("type is polygon for: " + 1);
                        polygon = setDrowingToolNull(polygon);
                        rectangle = setDrowingToolNull(rectangle);
                        console.log("polygon pt map", result.polygon);
                        polygon = new google.maps.Polygon({
                            paths: result.polygon,
                            strokeColor: '#FF0000',
                            strokeOpacity: 0.8,
                            strokeWeight: 2,
                            fillColor: '#FF0000',
                            fillOpacity: 0.35,
                            map: map
                        });
                        makeAjaxCall();
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    console.log("UserShapes Status: " + textStatus + ", Error: " + errorThrown);
                    /*
                    var jsonFakeResult = [
                        {
                            type: "circle",
                            radius: 1461.5543966715109,
                            center: {
                                lat: 47.080646,
                                lng: 21.9242443
                            }
                        },
                        {
                            type: "circle",
                            radius: 121.5543966715109,
                            center: {
                                lat: 47.080646,
                                lng: 21.9242443
                            }
                        },
                        {
                            type: "polygon",
                            polygon: [
                                {
                                    lat: 47.0670818420858,
                                    lng: 22.0450973510742
                                },
                                {
                                    lat: 47.0883580733382,
                                    lng: 22.0450973510742
                                },
                                {
                                    lat: 47.0883580733382,
                                    lng: 21.9820976257324
                                },
                                {
                                    lat: 47.0670818420858,
                                    lng: 21.9820976257324
                                }
                            ]
                        }
                    ];
                    var select = $("#SavedShapes");
                    var result = jsonFakeResult[json.index_number];
                    var setDrowingToolNull = function (shape) {
                        console.log("aici");
                        if (rectangle != null) {
                            rectangle.setMap(null);
                            rectangle = null;
                        }
                        if (circle != null) {
                            circle.setMap(null);
                            circle = null;
                        }
                        if (polygon != null) {
                            polygon.setMap(null);
                            polygon = null;
                        }
                        return null;
                    }
                    if(result.type=="circle") {
                        console.log("type is circle for: "+ 1);
                        circle = setDrowingToolNull(circle);
                        circle = new google.maps.Circle({
                            strokeColor: '#FF0000',
                            strokeOpacity: 0.8,
                            strokeWeight: 2,
                            fillColor: '#FF0000',
                            fillOpacity: 0.35,
                            map: map,
                            center: result.center,
                            radius: result.radius// Math.sqrt(citymap[city].population) * 100
                        });
                        makeAjaxCall();
                    }
                    if(result.type=="polygon") {
                        console.log("type is polygon for: "+ 1);
                        polygon = setDrowingToolNull(polygon);
                        polygon = new google.maps.Polygon({
                            paths: result.polygon,
                            strokeColor: '#FF0000',
                            strokeOpacity: 0.8,
                            strokeWeight: 2,
                            fillColor: '#FF0000',
                            fillOpacity: 0.35,
                            map: map
                        });
                        makeAjaxCall();
                    }
                    */
                }
            });
        })
        $('#SaveFigure').click(function () {
            if (!polygon && !circle && !rectangle)
                alert("You need to draw a shape to save!");
            else {
                var answer = confirm("Do you want to set this shape as default?");
                var json = {
                    type: null,
                    lat: null,
                    lon: null,
                    rad: null,
                    polygonPoints: [],
                    is_default: false
                };

                if (polygon) {
                    json.type = 'polygon';
                    var vertices = polygon.getPath();
                    for (var i = 0; i < vertices.getLength(); i++) {
                        var xy = vertices.getAt(i);
                        json.polygonPoints.push([xy.lat(), xy.lng()]);
                    }
                }

                if (rectangle) {
                    json.type = 'polygon';
                    json.polygon = [];
                    var vertices = rectangle.getBounds();
                    json.polygonPoints.push([vertices.getSouthWest().lat(), vertices.getNorthEast().lng()]);
                    json.polygonPoints.push([vertices.getNorthEast().lat(), vertices.getNorthEast().lng()]);
                    json.polygonPoints.push([vertices.getNorthEast().lat(), vertices.getSouthWest().lng()]);
                    json.polygonPoints.push([vertices.getSouthWest().lat(), vertices.getSouthWest().lng()]);
                }

                if (circle) {
                    json.type = 'circle';
                    json.lat = circle.getCenter().lat();
                    json.log = circle.getCenter().lng();
                    json.rad = circle.getRadius() / 63781;
                }
                if(answer)
                   json.is_default = true;

                if (circle || rectangle || polygon)
                    $.ajax({
                        async: true,
                        type: "POST",
                        url: "/web-routes/SaveShape",
                        data: json,
                        success: function (result) {
                            alert("The shape was set.");
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            console.log("Something wrong happened. Please try again.");
                        }
                    });
            }
        })
